% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util_regex.R
\name{text.to.data}
\alias{text.to.data}
\alias{grep.matches}
\alias{to.matches.or.null}
\alias{mgrep}
\alias{grep.whole}
\title{Text to data}
\usage{
grep.matches(pattern, text, npats = stringr::str_count(pattern, "\\\\(") -
  stringr::str_count(pattern, "\\\\\\\\\\\\("), sep = "#", ...)

to.matches.or.null(text, ..., strip.newlines = TRUE, match.names)

mgrep(patterns, ..., grep.fun = grep)

grep.whole(pattern, ..., grep.fun = grep)
}
\arguments{
\item{pattern}{Pattern to match as in \code{grep}}

\item{text}{Text on which match will be done as in \code{grep}}

\item{npats}{Number of patterns to capture (patterns surrounded by '()'). Automatically detected}

\item{sep}{Matches are concatenated together before being split. The separator used can be set. It needs to be a pattern that does not naturally appear in the strings matched. Defaults to '#'}

\item{...}{Parameters forwarded to native functions}

\item{strip.newlines}{Should multilines string be considered as one line strings? This is important beause the way multiline strings are matched is different than single line ones. By default newlines are stripped from the text.}

\item{match.names}{Each match can be named in which case a data.table which columns are the matches and column names this parameter will be returned. A list is returned otherwise}

\item{grep.fun}{Which regex function should be used in mgrep}

\item{replacement}{Replacement pattern as in \code{gsub}}
}
\description{
Various function to extract relevant data from text using regex.
}
\details{
There are a few native function to manipulate text with regexed \code{grep}, \code{gsub} etc... But no function to extract the string matched from the text.\cr
We provide here some function to do so
}
\section{Functions}{
\itemize{
\item \code{grep.matches}: Returns either a 2 elements list describing the matches. The first element is a vector giving the indices that match. The second element is an array with as many columns as they are patterns to capture (ie '(...)') and which elements are the strings captured.

\item \code{to.matches.or.null}: Returns the patterns captured or an empty string for strings that didn't match. There is an option for setting the names of each pattern captured.

\item \code{mgrep}: Matches a set of pattern

\item \code{grep.whole}: Matches the entire string. Will return FALSE if only part of the string matches.
}}

